#!/bin/bash
aur_packages=/tmp/aur_packages
#Use same branch as host system
branch=$(awk -F= '/Branch/ {print $2}' /etc/pacman-mirrors.conf)
#Use same architecture as host system 
arch=$(uname -m)

aur_pkglist()
{
#Collect list of packages not in the repos
pacman -Qqm > $aur_packages
#Try to sort the list to make the building process easier
for pkg in $(cat $aur_packages); do
   #list depencies of package and check if it is on the list of installed aur packages
   aur_deps=$(pactree -u $pkg | grep -f $aur_packages)
   lowest_dep=$(echo $aur_deps | tail -n 1)
   #only do something if the packages has depencies in from aur
   if [ $(cat $aur_deps | wc -l) -gt 0 ]; then
       #move package below it's depencies in the list
       if [ $(grep -n $pkg $aur_packages | cut -f1 -d:) -lt $(grep -n $lowest_dep $aur_packages | cut -f1 -d:) ]
           #remove the dependent package from list
           sed -i "/$pkg/d" $aur_packages 
           #re-add the package to list, after last of its dependencies.
           sed -i "/$lowest_dep/a$pkg" $aur_packages
       fi
   fi
done
   
}

build_aur_packages()
{
	echo -e "Now building aur packages"
	mkdir $HOME/local-build && cd $HOME/local-build
	for pkg in $(cat aur_packages); do
		yaourt -G pkg
	done
	for pkg in $(ls -d */); do
		buildpkg -a $arch
	done
}

build_repo()
{
	#collect packages into local repo folder
	cp -r /var/cache/manjaro-tools/pkg/$branch $HOME/local-repo
	#cd into the repo directory and build the
	cd $HOME/local-repo/$arch
	repo-add local-repo.db.tar.gz *.pkg.tar.*
}

upload_repo()
{
	
}

add_repo()
{
	#add repo to /etc/pacman.conf
}
main()
{
	aur_pkglist
	if [ $(cat aur_packages | wc -l) -gt 0]; then
		build_aur_packages
		build_repo
		upload_repo
		add_repo
	else 
		echo -e "no aur packages installed, nothing to do"
		exit
	fi
}
